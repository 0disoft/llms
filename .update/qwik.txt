### 2024년 8월 ~ 2025년 8월 Qwik 프레임워크 기능 변경 보고서

2024년 8월부터 2025년 8월까지의 기간은 Qwik 웹 프레임워크의 중요한 전환점이었습니다. 이 시기의 핵심은 **Qwik 2.0 베타**의 출시로, 이는 프레임워크의 아키텍처를 근본적으로 재작성하여 성능과 개발자 경험을 대폭 향상시키는 것을 목표로 했습니다.

---

### 주요 변경 사항

#### 1. 코어 프레임워크의 혁신
* **Qwik 2.0 코어 재작성**: 프레임워크의 핵심인 "재개 가능성(resumability)"을 더욱 최적화하기 위해 HTML 인코딩과 가상 노드 구체화 방식이 근본적으로 변경되었습니다. 
* **더 간결한 HTML 및 지연된 가상 노드**: 비인간 가독성 데이터를 HTML 스트림 끝으로 옮기고, 가상 노드 생성을 지연시켜 클라이언트 측 런타임 비용과 메모리 할당을 줄였습니다.
* **`qwikloader` 전달 개선**: `qwikloader`가 SSR HTML에 직접 포함되지 않고 별도의 최적화된 번들로 로드되어 초기 페이지 크기를 줄이고 로딩 속도를 높였습니다.
* **`unwrapStore` API 노출**: `useStore()` 훅의 내용을 복제할 수 있는 저수준 API가 추가되어 상태 관리 유연성이 향상되었습니다.

---

#### 2. 개발 경험 및 생태계 개선
* **`qwik add` 모노레포 지원**: `qwik add` 명령에 `projectDir` 매개변수가 추가되어 모노레포 환경에서의 개발 워크플로우를 간소화했습니다.
* **Qwik City `rewrite()` 메서드**: `RequestEvent` 객체에 `rewrite()` 메서드가 추가되어 브라우저 URL을 변경하지 않는 내부 서버 측 리다이렉트를 가능하게 했습니다.
* **향상된 디버깅**: 개발 모드에서 QRL(Qwik-specific URLs) 경로와 부모 파일 이름이 명확하게 표시되어 디버깅 경험이 개선되었습니다.
* **`@QwikDev` npm 조직으로 전환**: Qwik 2.x 버전부터 코어 패키지 명칭이 `@builder.io/qwik`에서 `@qwik.dev`로 변경되었습니다. 이는 커뮤니티 중심의 오픈소스 프로젝트로 나아가기 위한 전략적 변화를 의미합니다.

---

#### 3. 지원 중단 및 마이그레이션 고려 사항
* **`useComputed`의 비동기 함수 사용 중단**: Qwik 2.0에서는 `useComputed` 훅 내에서 비동기 함수를 사용할 수 없습니다. `useTask` 또는 `useResource` 훅으로 마이그레이션해야 합니다.
* **번들 캐싱을 위한 서비스 워커 폐지**: 저사양 기기에서의 성능 오버헤드를 줄이기 위해 전용 서비스 워커가 단계적으로 폐지됩니다. 이제 서버 또는 CDN의 **`HTTP Cache-Control`** 헤더를 통한 캐싱이 권장됩니다.
* **`qwikVite`의 `srcInput` 옵션 제거**: `qwikVite` 구성에서 `srcInput` 옵션이 사용 중단되었습니다.
* **SSR 내부 빌드 임포트 제거**: 특정 내부 경로에 대한 명시적 임포트(`@qwik-router-not-found-paths`, `@qwik-router-static-paths`)가 더 이상 필요하지 않습니다.
### Svelte 기능 변화 및 지원 종료 보고서 (2024년 8월 ~ 2025년 8월)

#### 요약
2024년 8월부터 2025년 8월까지는 Svelte 프레임워크의 중요한 전환점입니다. 이 기간은 Svelte 5의 안정적인 출시와 함께 프레임워크의 핵심 아키텍처가 재정의되었습니다. 이 보고서는 **Svelte 4의 암묵적 반응성 모델에서 Svelte 5의 명시적인 "룬(Runes)"으로의 핵심적인 전환**에 중점을 둡니다.

Svelte 5는 단순한 반복 업데이트가 아니라, 근본적인 아키텍처 재작업을 통해 **성능, 번들 크기, 개발자 경험(DX)**을 크게 개선했습니다. 이러한 변화는 Svelte의 컴파일러 중심 접근 방식을 더욱 강화하며, 새로운 패러다임은 명시적인 상태 관리와 컴포넌트 구성 방식을 도입합니다.

---

### Svelte 5: 새로운 기능 및 핵심 아키텍처 변경 사항

Svelte 5는 개발자가 Svelte 애플리케이션을 구축하는 방식을 재정의하는 주요 기능과 아키텍처 변화를 도입했습니다.

#### 1. 룬(Runes): 새로운 반응형 시스템
룬은 Svelte 5의 핵심 기능으로, **`$state`**, **`$derived`**, **`$effect`**와 같은 새로운 시그널 기반 반응형 API를 의미합니다. Svelte 4의 암묵적인 `let` 선언과 `$:` 구문을 대체하며, 다음과 같은 이점을 제공합니다.

* **명시적인 상태 관리**: `$state()`를 사용해 반응형 변수를 명확하게 선언하여 예측 가능성을 높입니다.
* **세분화된 반응성**: 프록시(Proxies)를 사용해 객체나 배열의 개별 속성 변경에도 반응합니다.
* **컴포넌트 외부에서의 사용**: 일반 `.js` 및 `.ts` 파일에서 룬을 사용하여 반응형 로직을 재사용할 수 있습니다.
* **디버깅 편의성**: `$inspect` 룬은 개발 모드에서 종속성을 추적하고 값 변경을 기록하여 디버깅을 돕습니다.
* **양방향 바인딩**: `$bindable` 룬은 컴포넌트 속성에 대한 양방향 데이터 바인딩을 간소화합니다.

#### 2. 스니펫(Snippets): 향상된 컴포넌트 구성
스니펫은 재사용 가능한 마크업 "덩어리"를 생성하는 강력한 새 메커니즘으로, 기존의 `<slot>` 태그를 대체합니다. **`{#snippet...}`** 블록으로 정의하고 **`{@render...}`** 태그로 렌더링하며, 다음과 같은 개선점을 제공합니다.

* **매개변수 지원**: 스니펫은 인수를 받을 수 있어 유연성이 향상됩니다.
* **타입 안전성**: 제네릭을 지원하여 타입 추론 및 타입 안전성을 개선합니다.

#### 3. 간소화된 이벤트 및 속성 처리
Svelte 5는 상용구 코드를 줄이고 표준 웹 플랫폼과의 일관성을 높였습니다.

* **`createEventDispatcher()` 지원 중단**: 컴포넌트 이벤트는 이제 콜백 `props`를 통해 전달하는 것이 권장됩니다.
* **`on:event` → `onclick`**: DOM 요소의 경우 `on:click` 구문 대신 표준 HTML 이벤트 속성 사용을 권장합니다.
* **`export let` → `$props()`**: 컴포넌트 속성은 `$props()` 룬을 통해 선언하여 유연성을 높였습니다.

#### 4. 기타 주요 변경 사항
* **새로운 CLI (`sv`)**: 프로젝트 설정, 애드온 설치, 마이그레이션을 위한 새로운 명령줄 인터페이스가 도입되었습니다.
* **향상된 TypeScript 지원**: 내장된 TypeScript 지원이 강화되어 타입 안전성과 개발자 생산성이 향상되었습니다.
* **컴포넌트 내 `await`**: 컴포넌트 내에서 `await` 키워드를 직접 사용할 수 있어 비동기 데이터 처리가 간소화되었습니다.
* **`Actions`의 대체물 `Attachments`**: 기존의 `Actions` API가 더 유연한 **`Attachments`**로 대체되었습니다.

---

### Svelte 4 지원 종료 및 마이그레이션 고려 사항

#### 1. Svelte 4 공식 지원 종료
Svelte 4는 **2024년 10월 19일**, Svelte 5의 안정적인 릴리스와 동시에 공식적인 지원이 종료되었습니다. Svelte 3/4 구문은 Svelte 5에서 계속 작동하지만, **지원 중단된 기능**으로 분류되며 향후 릴리스에서 제거될 예정입니다.

#### 2. 마이그레이션 전략 및 주의 사항
Svelte 5는 하위 호환성을 염두에 두고 설계되었지만, 원활한 전환을 위해서는 사전 예방적인 마이그레이션이 필수적입니다.

* **자동 마이그레이션 스크립트**: **`npx sv migrate svelte-5`** 명령을 사용하여 코드 변환을 자동화할 수 있습니다.
* **수동 검토 필수**: 마이그레이션 스크립트가 모든 복잡한 케이스를 처리하지 못할 수 있으므로, 특히 **`$:` 문을 `$derived`와 `$effect`로 변환하는 작업**은 수동 검토가 필요합니다.
* **`$effect`의 SSR 동작**: Svelte 4와 달리 `$effect()`는 서버 측 렌더링(SSR) 중에 실행되지 않습니다. SSR에 의존하는 애플리케이션은 이 차이점을 고려해야 합니다.
* **최소 버전 요구 사항**: Svelte 5를 사용하려면 **Node.js 16 이상**과 **최신 SvelteKit** 및 관련 도구를 사용해야 합니다.

---

### Svelte 코어 릴리스 및 생태계 업데이트

Svelte 5 출시 이후, 2025년 8월까지 **5.38.1** 버전까지 여러 패치 및 마이너 릴리스가 있었습니다. 이러한 릴리스는 주로 새로운 반응성 시스템과 관련된 버그를 수정하고, `$const` 선언 내 `await` 허용과 같은 작지만 영향력 있는 기능을 추가했습니다.

Svelte 생태계도 활발하게 성장했습니다. **SvelteKit 2**가 출시되어 Vite 5를 지원하고 얕은 라우팅(Shallow Routing)을 도입했습니다. **`sv CLI`**의 도입과 언어 도구의 개선은 개발자 경험을 향상시켰습니다. 또한, **shadcn-svelte**, **Skeleton V3** 등 수많은 주요 UI 라이브러리들이 Svelte 5를 빠르게 지원하여 프레임워크의 안정성과 커뮤니티의 신뢰를 입증했습니다.
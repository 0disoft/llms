### 2024년 8월 ~ 2025년 8월 Svelte 주요 기능 변경사항

---

2024년 8월부터 2025년 8월 사이에 Svelte는 **Svelte 5**의 출시와 함께 프레임워크의 근본적인 부분에 큰 변화를 가져왔습니다. Svelte 5는 컴파일러 중심의 새로운 반응성 시스템인 **Runes**를 도입하며, 기존 Svelte 4의 많은 기능들을 대체하거나 제거했습니다.

아래는 이 기간 동안 Svelte에서 더 이상 지원되지 않거나 새롭게 추가된 주요 기능들을 정리한 것입니다.

### 1. 더 이상 지원되지 않는 (Deprecated/Removed) 기능

Svelte 5는 기존 Svelte 4의 여러 API와 문법을 제거하고 새로운 방식으로 대체했습니다. Svelte 5에서도 레거시 모드를 통해 기존 문법을 사용할 수 있지만, 공식적으로는 아래 기능들의 사용을 권장하지 않습니다.

* **암묵적 반응성:** `$:` 레이블 문법에 의존하던 기존의 반응성 시스템이 제거되었습니다. 이제는 `$state`와 `$derived`를 사용해 상태와 파생값을 명시적으로 선언해야 합니다.
* **`createEventDispatcher`:** 컴포넌트 간 이벤트 전달을 위해 사용되던 `createEventDispatcher`가 더 이상 권장되지 않습니다. 대신, props로 직접 콜백 함수를 전달하는 방식이 공식적인 방법이 되었습니다.
* **`on:` 지시자:** `on:click`, `on:input`과 같은 이벤트 지시자가 제거되었습니다. 이제 `<button onclick={handleClick}>`와 같이 HTML 요소의 속성으로 직접 이벤트를 정의해야 합니다.
* **`slot` 태그:** `<slot>` 태그는 더 이상 사용되지 않습니다. 재사용 가능한 마크업 블록을 전달하기 위한 새로운 기능인 **Snippets**으로 대체되었습니다.
* **컴포넌트 props 선언 방식:** `export let name;` 방식은 이제 권장되지 않습니다. 대신 `$props()` 룬을 사용해 컴포넌트의 속성을 명시적으로 정의하는 방식으로 변경되었습니다.
* **수명 주기 함수:** `afterUpdate`와 `beforeUpdate`가 제거되었습니다. 대신 `$effect` 룬을 사용해 부수 효과(side effect)를 관리하도록 변경되었습니다.
* **컴포넌트 클래스:** Svelte 컴포넌트가 더 이상 클래스로 컴파일되지 않습니다. 이로 인해 `$set`, `$destroy` 같은 컴포넌트 인스턴스 메소드도 제거되었습니다.

### 2. 새롭게 추가된 기능

Svelte 5의 핵심은 새로운 반응성 시스템인 **Runes**와 그에 수반되는 기능들입니다. 이 기능들은 더 명시적이고, 유연하며, `.svelte` 파일 외부에서도 반응성을 사용할 수 있게 해줍니다.

* **Runes:** Svelte 5의 핵심 기능으로, `$state`, `$derived`, `$effect`가 대표적입니다.
    * `$state`: 컴포넌트의 반응성 있는 상태를 정의합니다.
    * `$derived`: `$state`에서 파생된 값을 정의합니다.
    * `$effect`: DOM 조작, API 호출 등 부수 효과를 관리합니다.
    * `$props`: 컴포넌트의 props를 명시적으로 정의합니다.
    * `$bindable`: `$bind:value`를 사용해 양방향 바인딩을 지원하는 props를 정의합니다.
* **Snippets:** `<slot>`을 대체하는 새로운 기능입니다. 재사용 가능한 마크업 블록을 컴포넌트 props로 전달하는 유연한 방법을 제공합니다.
* **Event Properties:** `on:` 지시자를 대체하는 새로운 이벤트 처리 방식입니다. `<button onclick={...}>`와 같이 HTML 속성처럼 이벤트를 정의할 수 있습니다.
* **새로운 빌트인 지시자:**
    * `@html`: HTML 문자열을 안전하게 렌더링합니다.
    * `@const`: 컴포넌트 스크립트 블록 내에서 상수를 선언합니다.
    * `@debug`: 디버깅을 위한 용도로 사용됩니다.
* **새로운 CLI (`sv`):** `npx svelte-kit`을 대체하는 새로운 CLI 도구로, `sv create`나 `sv add`와 같은 기능을 제공합니다.
* **향상된 SSR (Server-Side Rendering):** 서버 렌더링 성능이 더욱 강화되어, 초기 로딩 속도와 SEO에 더 유리해졌습니다.
* **네이티브 TypeScript 지원:** 별도의 설정 없이 TypeScript를 기본적으로 지원합니다.